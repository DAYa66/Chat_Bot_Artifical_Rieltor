# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from glob import glob
from random import choice
import requests
from telegram import InlineKeyboardMarkup, InlineKeyboardButton, ParseMode,\
    ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ConversationHandler
from utility import *
import nltk
nltk.download('stopwords')
import re

def start_message(bot, update):
    print('–ö—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start.')  # –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã /start
    bot.message.reply_text(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {bot.message.chat.first_name}! –ü—Ä–µ–¥–ª–∞–≥–∞—é –∫ –ø—Ä–æ–¥–∞–∂–µ —É—á–∞—Å—Ç–æ–∫ —Å –¥–æ–º-–±–∞–Ω–µ–π –≥–∞—Ä–∞–∂–æ–º –∏ —Ç–µ—Ö—ç—Ç–∞–∂–æ–º –ø–æ–¥ –¥–æ–º –≤ —ç–ª–∏—Ç–Ω–æ–º –ø–æ—Å–µ–ª–∫–µ.\n'
                           f'–ï—Å—Ç—å –≤—Å–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏. –ü—Ä–æ—à—É –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ—Å–µ–ª–∫—É, —É—á–∞—Å—Ç–∫—É –∏ –ª—é–±—ã–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –Ω–∞ —É—á–∞—Å—Ç–∫–µ.\n'
                           f'–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ñ–æ—Ç–æ –∫–∞–∫–æ–≥–æ-–ª–∏–±–æ –æ–±—ä–µ–∫—Ç–∞/–ø–æ–¥–æ–±—ä–µ–∫—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å - –ø–æ–∫–∞–∂–∏ ..., –µ—Å–ª–∏ —á–∞—Ç-–±–æ—Ç –∑–∞–≤–∏—Å –ø—Ä–æ—à—É –Ω–∞–±—Ä–∞—Ç—å /start'
                           , reply_markup=get_keyboard())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç

def grade_start(bot, update):
    bot.message.reply_text(
        '–ö–∞–∫–æ–µ —É –≤–∞—Å –∏—Å—Ç–∏–Ω–Ω–æ–µ –∏–º—è?', reply_markup=ReplyKeyboardRemove())  # –≤–æ–ø—Ä–æ—Å –∏ —É–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return "user_name"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def grade_get_name(bot, update):
    update.user_data['name'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    bot.message.reply_text("–û—Ü–µ–Ω–∏—Ç–µ —á–∞—Ç-–±–æ—Ç –æ—Ç 1 –¥–æ 5")  # –∑–∞–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å
    reply_keyboard = [["1", "2", "3", "4", "5"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    return "evaluation"   # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def grade_get_evaluation(bot, update):
    update.user_data['evaluation'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    #reply_keyboard = [["1", "2", "3", "4", "5"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    reply_keyboard = [["–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å"]]  # —Å–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    bot.message.reply_text("–ü–æ–º–æ–≥–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —á–∞—Ç-–±–æ—Ç –ª—É—á—à–µ, –Ω–∞–ø–∏—à–∏—Ç–µ –æ—Ç–∑—ã–≤. –ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —à–∞–≥.",
                           reply_markup=ReplyKeyboardMarkup(
                               reply_keyboard, resize_keyboard=True, one_time_keyboard=True))  # –∫–ª–∞–≤–∞ –∏—Å—á–µ–∑–∞–µ—Ç
    return "comment"  # –∫–ª—é—á –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞

def grade_comment(bot, update):
    update.user_data['comment'] = bot.message.text  # –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç
    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}
    <b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> {comment}
    """.format(**update.user_data)
    print(text)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π!", reply_markup=get_keyboard())  # —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä. –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞

def grade_exit_comment(bot, update, db):
    update.user_data['comment'] = None
    text = """–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–ø—Ä–æ—Å–∞:
    <b>–ò–º—è:</b> {name}
    <b>–û—Ü–µ–Ω–∫–∞:</b> {evaluation}""".format(**update.user_data)
    print(text)
    grade_data = update.user_data
    print(grade_data)
    db.create_post(grade_data)
    bot.message.reply_text(text, parse_mode=ParseMode.HTML)  # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º HTML
    bot.message.reply_text("–°–ø–∞—Å–∏–±–æ!", reply_markup=get_keyboard())  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Å–Ω. –∫–ª–∞–≤—É
    return ConversationHandler.END  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞

# —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
def send_photo(bot, update):
    lists = glob('images/*')  # —Å–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–∞—Ä—Ç–∏–Ω–æ–∫
    picture = choice(lists)  # –±–µ—Ä–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–¥–Ω—É –∫–∞—Ä—Ç–∏–Ω–∫—É
    inl_keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton(f"–æ—Ü–µ–Ω–∏—Ç–µ —Ñ–æ—Ç–æ üëç", callback_data=1),
        InlineKeyboardButton(f"–æ—Ü–µ–Ω–∏—Ç–µ —Ñ–æ—Ç–æ üëé", callback_data=-1)
    ]])
    update.bot.send_photo(
        chat_id=bot.message.chat.id,
        photo=open(picture, 'rb'),
        reply_markup=inl_keyboard)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

def inline_button_pressed(bot, update):
    print(bot.callback_query)
    query = bot.callback_query  # –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏
    update.bot.edit_message_caption(
        caption='–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –≤–∞—à –≤—ã–±–æ—Ä!',
        chat_id=query.message.chat.id,
        message_id=query.message.message_id)  # —É–±–µ—Ä–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–≤–µ–¥–µ–º —Ç–µ–∫—Å—Ç

# —Ñ—É–Ω–∫—Ü–∏—è –ø–µ—á–∞—Ç–∞–µ—Ç –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç
def get_contact(bot, update):
    print(bot.message.contact)
    bot.message.reply_text('{}, –º—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º!'
                           .format(bot.message.chat.first_name))

def dontknow(bot, update):
    bot.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ")

def currency_exchange(bot, update):
    USD_RUB = requests.get("https://api.coingate.com/v2/rates/merchant/USD/RUB")
    EUR_RUB = requests.get("https://api.coingate.com/v2/rates/merchant/EUR/RUB")
    bot.message.reply_text(f"–ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞: {USD_RUB.text}   –ö—É—Ä—Å –µ–≤—Ä–æ: {EUR_RUB.text}")

def preprocess_txt(line,morpher, sw, exclude):
    if line==None:
        return None
    else:
        line=re.sub(re.compile(r'[^\w\s]'), " ", line)
        line=re.sub(re.compile(r'[^a-zA-Z–∞-—è–ê-–Ø0-9]'), " ", line)
        spls = "".join(i for i in line.strip() if i not in exclude).split()
        spls = [morpher.parse(i.lower())[0].normal_form for i in spls]
        spls = [i for i in spls if i not in sw and i != ""]
        #spls = [i for i in spls if i != ""]
        #return ' '.join(spls)
        return spls

def answer_text(bot, update):
    print(bot.message.text)  # –ø–µ—á–∞—Ç–∞–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    preprocess_text = preprocess_txt(bot.message.text, morpher, sw, exclude)
    bot.message.reply_text(preprocess_text)  # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ —Ç–µ–∫—Å –∫–æ—Ç–æ—Ä—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–∞–ª

def is_english(bot, update):
    return bot.message.reply_text("–ò–∑–≤–∏–Ω–∏—Ç–µ, –∞–Ω–≥–ª–∏–π—Å–∫–æ–º—É —è–∑—ã–∫—É —è –Ω–µ –æ–±—É—á–µ–Ω.")

def choice_data(question, morpher=morpher, sw=sw, exclude=exclude,
                morpher_qwest_tokens=morpher_qwest_tokens):
    spls = preprocess_txt(question, morpher, sw, exclude)
    cnt=0
    for i in spls:
        if i in morpher_qwest_tokens:
            cnt+=1
    question = ' '.join(spls)
    return cnt, question
